@using CemSys.Models.ViewModel
@model ABMRepositoryVM<TipoNicho>

@{
    string action = (Model.EsModificacion == true) ? "Modificar" : "Registrar";
    string actionTexto = (Model.EsModificacion == true) ? "Modificar" : "Registrar";
}

<div class="main-content">
    <h1>Tipo Nicho</h1>

    <form asp-action="@action" method="post">
        <label class="form-label" for="tipo">Tipo nicho</label>
        <input type="hidden" name="id" value="@Model.Modelo?.IdTipoNicho" />
        <input class="form-control-sm" type="text" name="tipo" value="@Model.Modelo?.TipoNicho1" required maxlength="15" id="tipo" />
        <input class="btn btn-primary" type="submit" name="name" value="@actionTexto" />
    </form>

    @if (Model.Lista.Count == 0)
    {
        <p>No hay datos para mostrar</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Tipo</th>
                    <th>Predeterminado</th>
                    <th>Acción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tipo in Model.Lista)
                {
                    <tr>
                        <td>@tipo.TipoNicho1.ToUpper()</td>
                        <td>
                            <!-- Radio buttons agrupados -->
                            <input type="radio"
                                   name="idTipoPredeterminado"
                                   value="@tipo.IdTipoNicho"
                            @(tipo.PorDefecto ? "checked" : "") />
                        </td>
                        <td>
                            <form asp-action="Modificar" method="get" style="display: inline-block;">
                                <input type="hidden" name="id" value="@tipo.IdTipoNicho" />
                                <input type="submit" class="btn btn-dark" value="Modificar" />
                            </form>
                            <form asp-action="Eliminar" method="post" style="display: inline-block;" id="formularioEliminar">
                                <input type="hidden" name="id" value="@tipo.IdTipoNicho" />
                                <input type="button" class="btn btn-danger" value="Eliminar" onclick="enviarFormulario()" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Formulario para guardar el predeterminado -->
        <form asp-action="EstablecerPredeterminado" method="post">
            <!-- Campo para capturar el valor del radio seleccionado -->
            <input type="hidden" id="selectedId" name="idTipoPredeterminado" />
            <input type="submit" class="btn btn-primary" value="Guardar Predeterminado"
                   onclick="document.getElementById('selectedId').value = document.querySelector('input[name=idTipoPredeterminado]:checked').value;" />
        </form>
        <p>@ViewData["MensajeEmitir"]</p>
    }
</div>
@* Modal de confirmación *@
<div class="modal" tabindex="-1" id="modalConfirmacion" style="display:none">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">¡Advertencia!</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Desea eliminar esta sección?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="cerrarModal()">Cancelar</button>
                <button type="button" class="btn btn-danger" onclick="enviarFormulario()">Eliminar</button>
            </div>
        </div>
    </div>
</div>

<script>
    const inputNombre = document.getElementById('nombre');
    // Convertimos la lista de C# a un formato que JavaScript pueda entender
    let listaSeccionPanteon = @Html.Raw(Json.Serialize(Model.Lista));

    inputNombre.addEventListener('blur', (e) => {
        const nombreIngresado = inputNombre.value.trim().toLowerCase();

        // Verificamos si el nombre ya existe
        const existeNombre = listaSeccionPanteon.some(seccion =>
            seccion.nombre.toLowerCase() === nombreIngresado &&
            seccion.visibilidad !== false
        );

        if(existeNombre) {
            alert('¡Esta sección ya existe! Por favor ingrese un nombre diferente.');
            inputNombre.value = "";
        }
    });
</script>
<script>
    //logica de modal
    function confirmarEliminacion() {
        const form = document.getElementById("formularioEliminar");

        if (form.checkValidity()) {
            const modal = new bootstrap.Modal(document.getElementById("modalConfirmacion"));
            modal.show();
        } else {
            form.reportValidity();
        }
    }

    function cerrarModal() {
        document.getElementById("modalConfirmacion").style.display = "none";
    }

    function enviarFormulario() {
        const form = document.getElementById("formularioEliminar");

        if (form.checkValidity()) {
            form.submit(); // Sólo se envía si el formulario es válido
        } else {
            form.reportValidity(); // Muestra los mensajes de error del navegador
            cerrarModal(); // Opcional: cerrá el modal si querés forzar al usuario a revisar
        }
    }
    //fin logica modal
</script>
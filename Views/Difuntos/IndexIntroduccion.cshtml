@using CemSys.Models.ViewModel
@model VMResumenIntroduccion

<div class="main-content">
    <h1>Introducciones</h1>

    <!-- Botón Agregar -->
    <form asp-action="Registrar" method="get" class="mb-4 text-center">
        <input class="btn-agregar-guardar" type="submit" value="+ Introducir difunto" />
    </form>

    <!--buscador-->
    <form asp-action="IndexIntroduccion" method="post">
        <div class="bloque-filtrado">
            <fieldset >
                <legend>Buscador</legend>
                <div>
                    <input type="radio" name="tipoFiltro" value="todas" id="tipoFiltroTodas" checked/>
                    <label for="tipoFiltroTodas">Todas</label>
                </div>
                <div>
                    <input type="radio" name="tipoFiltro" value="desde" id="FiltroDesde" />

                    <label for="FiltroDesde">Desde</label>
                    <input type="date" name="desde" value="" />

                    <label for="FiltroHasta">Hasta</label>
                    <input type="date" name="hasta" value="" id="FiltroHasta" />
                </div>
            </fieldset>
        </div>

        <!-- Botón Buscar -->
        <div class="text-center mt-3">
            <button type="submit" class="btn-filtrar" id="btnBuscar">Buscar</button>
        </div>

    </form>

    <!-- Botón Generar reporte -->
    <form id="formGenerarReporte" asp-action="GenerarReporteIntroducciones" method="post">
        <input type="hidden" name="idsTramites" id="idsTramites" />
        <div class="text-center mt-3">
            <button type="submit" class="btn-filtrar">Generar reporte</button>
        </div>
    </form>

    <!-- Tabla de Introducciones -->
    @if (Model.ListaTramites.Count == 0)
    {
    }
    else
    {
        <table>
            <thead>
                <tr>
                    <th>Operación</th>
                    <th>Ingreso</th>
                    <th>DNI</th>
                    <th>Apellido y Nombre</th>
                    <th>Sección</th>
                    <th>Ubicación</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tramite in Model.ListaTramites)
                {
                    string dni = "";

                    string nombreCompleto = "";
                    string seccion = "";
                    string ubicacion = "";
                    string fechaIngreso = "";
                    string fechaIso = "";

                    @* Inicializar variables *@
                    
                    var difunto = tramite.DifuntoRelacionado;

                    if (difunto is NichosDifunto nicho)
                    {
                        dni = nicho.Difunto.Dni;
                        nombreCompleto = $"{nicho.Difunto.Apellido.ToUpper()} {nicho.Difunto.Nombre.ToUpper()}";
                        seccion = nicho.Nicho.SeccionNavigation.Nombre;
                        ubicacion = $"Nicho {nicho.Nicho.NroNicho} Fila {nicho.Nicho.NroFila}";
                        fechaIngreso = nicho.FechaIngreso?.ToString("dd/MM/yyyy HH:mm");
                        fechaIso = nicho.FechaIngreso?.ToString("yyyy-MM-dd");
                    }
                    else if (difunto is FosasDifunto fosa)
                    {
                        dni = fosa.Difunto.Dni;
                        nombreCompleto = $"{fosa.Difunto.Apellido.ToUpper()} {fosa.Difunto.Nombre.ToUpper()}";
                        seccion = fosa.Fosa.SeccionNavigation.Nombre;
                        ubicacion = $"Fosa {fosa.Fosa.NroFosa}";
                        fechaIngreso = fosa.FechaIngreso?.ToString("dd/MM/yyyy HH:mm");
                        fechaIso = fosa.FechaIngreso?.ToString("yyyy-MM-dd");
                    }
                    else if (difunto is PanteonDifunto panteon)
                    {
                        dni = panteon.Difunto.Dni;
                        nombreCompleto = $"{panteon.Difunto.Apellido.ToUpper()} {panteon.Difunto.Nombre.ToUpper()}";
                        seccion = panteon.Panteon.IdSeccionPanteonNavigation.Nombre;
                        ubicacion = $"Lote {panteon.Panteon.NroLote}";
                        fechaIngreso = panteon.FechaIngreso?.ToString("dd/MM/yyyy HH:mm");
                        fechaIso = panteon.FechaIngreso?.ToString("yyyy-MM-dd");

                    }
                    

                    <tr data-fecha="@fechaIso">
                        <td>@tramite.IdTramite</td>
                       
                        <td>@fechaIngreso hs</td>
                        @if (dni != "nn")
                        {
                            <td>@dni</td>
                        }
                        else
                        {
                            <td>--------</td>
                        }
                        <td>@nombreCompleto</td>
                        <td>@seccion.ToUpper()</td>
                        <td>@ubicacion</td>

                        <td>
                            <form asp-action="ResumenIntroduccion" method="get">
                                    <input type="hidden" name="idTramite" value="@tramite.IdTramite" />
                                    <input type="submit" class="btn btn-primary" name="" value="Ver" />
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }

</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const btnBuscar = document.getElementById("btnBuscar");
        const radioTodas = document.getElementById("tipoFiltroTodas");
        const radioDesde = document.getElementById("FiltroDesde");
        const inputDesde = document.querySelector("input[name='desde']");
        const inputHasta = document.querySelector("input[name='hasta']");
        const filas = document.querySelectorAll("tbody tr");


        const formReporte = document.getElementById("formGenerarReporte");
        const hiddenInputIds = document.getElementById("idsTramites");
        btnBuscar.addEventListener("click", function (e) {
            e.preventDefault();

            if (radioTodas.checked) {
                // Mostrar todas
                filas.forEach(fila => fila.style.display = "");
                inputDesde.value = "";
                inputHasta.value = "";
            } else if (radioDesde.checked) {
                const desdeValue = inputDesde.value;
                const hastaValue = inputHasta.value;

                const fechaDesde = desdeValue ? new Date(desdeValue) : null;
                const fechaHasta = hastaValue ? new Date(hastaValue) : null;

                filas.forEach(fila => {
                    const dataFecha = fila.dataset.fecha;
                    if (!dataFecha) {
                        fila.style.display = "none";
                        return;
                    }

                    const fechaFila = new Date(dataFecha);
                    let mostrar = true;

                    if (fechaDesde && fechaFila < fechaDesde) {
                        mostrar = false;
                    }
                    if (fechaHasta && fechaFila > fechaHasta) {
                        mostrar = false;
                    }

                    fila.style.display = mostrar ? "" : "none";
                    console.log("Fecha Fila:", dataFecha);

                });
            }
        });

        // Generar reporte
        formReporte.addEventListener("submit", function (e) {
            const ids = [];
            filas.forEach(fila => {
                if (fila.style.display !== "none") {
                    const id = fila.querySelector("td:first-child").textContent.trim();
                    ids.push(id);
                }
            });
            hiddenInputIds.value = ids.join(',');
        });
    });
</script>



    
@using CemSys.Models.ViewModel
@model VMResumenIntroduccion

<div class="main-content">
    <h1>Introducciones</h1>

    <!-- Botón Agregar -->
    <form asp-action="Registrar" method="get" class="mb-4 text-center">
        <button type="submit" class="btn-agregar-guardar">
            <i class="bi bi-person-plus"></i> Introducir difunto
        </button>
    </form>

    <!-- Estilos en línea -->
  
        <style >
        .buscador-container {
            display: flex;
            justify-content: center;
            margin-bottom: 30px;
        }

        .bloque-filtrado {
            background-color: #5DC1B9;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            color: #000;
            box-shadow: 1px 2px 5px 1px #7c7c7c;
            width: 700px; /* Aumentado el ancho */
        }

        fieldset {
            border: none;
            padding: 0;
            margin: 0;
        }

        legend {
            font-weight: bold;
            margin-bottom: 10px;
        }

        .filtros-linea {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
        }

        .filtro-radio,
        .filtro-fechas {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        input[type="date"] {
            padding: 4px 6px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .btn-filtrar {
            background-color: #0a3330;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
        }

            .btn-filtrar:hover {
                background-color: #062624;
            }

        .btn-generar {
            background-color: #338b85;
            color: #fff;
            border: none;
            padding: 10px 25px;
            border-radius: 6px;
            font-weight: 600;
            cursor: pointer;
        }

            .btn-generar:hover {
                background-color: #276e69;
            }

        .text-center {
            text-align: center;
        }

        .mt-3 {
            margin-top: 1rem;
        }

        .mt-5 {
            margin-top: 3rem;
        }
    </style>


    <!-- Buscador centrado y horizontal -->
    <form asp-action="IndexIntroduccion" method="post">
        <div class="buscador-container">
            <div class="bloque-filtrado">
                <fieldset class="p-2">
                    <legend>Buscador</legend>
                    <div class="filtros-linea">
                        <div class="filtro-radio">
                            <input type="radio" name="tipoFiltro" value="todas" id="tipoFiltroTodas" checked />
                            <label for="tipoFiltroTodas">Todas</label>
                        </div>
                        <div class="filtro-fechas">
                            <input type="radio" name="tipoFiltro" value="desde" id="FiltroDesde" />
                            <label for="FiltroDesde">Desde</label>
                            <input type="date" name="desdeFecha" />

                            <label for="FiltroHasta">Hasta</label>
                            <input type="date" name="hastaFecha" id="FiltroHasta" />
                        </div>
                    </div>

                    <!-- Botón Buscar dentro del bloque -->
                    <div class="text-center mt-3">
                        <button type="submit" class="btn-filtrar" id="btnBuscar">Buscar</button>
                    </div>
                </fieldset>
            </div>
        </div>
    </form>

    <!-- Botón Generar reporte -->
    <form id="formGenerarReporte" asp-action="GenerarReporteIntroducciones" method="post" class="mb-3">
        <input type="hidden" name="idsTramites" id="idsTramites" />
        <input type="hidden" name="desdeFecha" id="desdeFechaHidden" />
        <input type="hidden" name="hastaFecha" id="hastaFechaHidden" />

        <div class="text-center mt-5">
            <button type="submit" class="btn-generar">Generar reporte</button>
        </div>
    </form>


    <!-- Tabla de Introducciones -->
    @if (Model.ListaTramites.Count == 0)
    {
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Operación</th>
                    <th>Ingreso</th>
                    <th>DNI</th>
                    <th>Apellido y Nombre</th>
                    <th>Sección</th>
                    <th>Ubicación</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var tramite in Model.ListaTramites)
                {
                    string dni = "";

                    string nombreCompleto = "";
                    string seccion = "";
                    string ubicacion = "";
                    string fechaIngreso = "";
                    string fechaIso = "";

                    @* Inicializar variables *@
                    
                    var difunto = tramite.DifuntoRelacionado;

                    if (difunto is NichosDifunto nicho)
                    {
                        dni = nicho.Difunto.Dni;
                        nombreCompleto = $"{nicho.Difunto.Apellido.ToUpper()} {nicho.Difunto.Nombre.ToUpper()}";
                        seccion = nicho.Nicho.SeccionNavigation.Nombre;
                        ubicacion = $"Nicho {nicho.Nicho.NroNicho} Fila {nicho.Nicho.NroFila}";
                        fechaIngreso = nicho.FechaIngreso?.ToString("dd/MM/yyyy HH:mm");
                        fechaIso = nicho.FechaIngreso?.ToString("yyyy-MM-dd");
                    }
                    else if (difunto is FosasDifunto fosa)
                    {
                        dni = fosa.Difunto.Dni;
                        nombreCompleto = $"{fosa.Difunto.Apellido.ToUpper()} {fosa.Difunto.Nombre.ToUpper()}";
                        seccion = fosa.Fosa.SeccionNavigation.Nombre;
                        ubicacion = $"Fosa {fosa.Fosa.NroFosa}";
                        fechaIngreso = fosa.FechaIngreso?.ToString("dd/MM/yyyy HH:mm");
                        fechaIso = fosa.FechaIngreso?.ToString("yyyy-MM-dd");
                    }
                    else if (difunto is PanteonDifunto panteon)
                    {
                        dni = panteon.Difunto.Dni;
                        nombreCompleto = $"{panteon.Difunto.Apellido.ToUpper()} {panteon.Difunto.Nombre.ToUpper()}";
                        seccion = panteon.Panteon.IdSeccionPanteonNavigation.Nombre;
                        ubicacion = $"Lote {panteon.Panteon.NroLote}";
                        fechaIngreso = panteon.FechaIngreso?.ToString("dd/MM/yyyy HH:mm");
                        fechaIso = panteon.FechaIngreso?.ToString("yyyy-MM-dd");

                    }
                    

                    <tr data-fecha="@fechaIso">
                        <td>@tramite.IdTramite</td>
                       
                        <td>@fechaIngreso hs</td>
                        @if (dni != "nn")
                        {
                            <td>@dni</td>
                        }
                        else
                        {
                            <td>--------</td>
                        }
                        <td>@nombreCompleto</td>
                        <td>@seccion.ToUpper()</td>
                        <td>@ubicacion</td>

                        <td>
                            <form asp-action="ResumenIntroduccion" method="get">
                                <input type="hidden" name="idTramite" value="@tramite.IdTramite" />
                                <button type="submit" class="btn btn-primary" title="Ver detalle">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </form>

                        </td>
                    </tr>
                }
            </tbody>
        </table>

    }
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const btnBuscar = document.getElementById("btnBuscar");
        const radioTodas = document.getElementById("tipoFiltroTodas");
        const radioDesde = document.getElementById("FiltroDesde");
        const inputDesde = document.querySelector("input[name='desdeFecha']");
        const inputHasta = document.querySelector("input[name='hastaFecha']");

        const inputHiddenDesde = document.getElementById("desdeFechaHidden");
        const inputHiddenHasta = document.getElementById("hastaFechaHidden");

        const filas = document.querySelectorAll("tbody tr");

        const formReporte = document.getElementById("formGenerarReporte");
        const hiddenInputIds = document.getElementById("idsTramites");

        // Función para obtener fecha mínima y máxima de las filas visibles
        function actualizarFechasHidden() {
            const fechas = Array.from(filas)
                .filter(fila => fila.style.display !== "none")
                .map(fila => fila.dataset.fecha)
                .filter(fecha => fecha)
                .map(fecha => new Date(fecha));

            if (fechas.length > 0) {
                const minFecha = new Date(Math.min(...fechas));
                const maxFecha = new Date(Math.max(...fechas));
                const formato = fecha => fecha.toISOString().split("T")[0];
                inputDesde.value = formato(minFecha);
                inputHasta.value = formato(maxFecha);
                inputHiddenDesde.value = inputDesde.value;
                inputHiddenHasta.value = inputHasta.value;
            } else {
                inputDesde.value = "";
                inputHasta.value = "";
                inputHiddenDesde.value = "";
                inputHiddenHasta.value = "";
            }
        }

        // Al cargar la página, actualizar fechas hidden según todas las filas visibles
        actualizarFechasHidden();

        btnBuscar.addEventListener("click", function (e) {
            e.preventDefault();

            if (radioTodas.checked) {
                // Mostrar todas las filas
                filas.forEach(fila => fila.style.display = "");

                // Actualizar fechas min y max
                actualizarFechasHidden();

                formReporte.submit();

            } else if (radioDesde.checked) {
                const desdeValue = inputDesde.value;
                const hastaValue = inputHasta.value;

                const fechaDesde = desdeValue ? new Date(desdeValue) : null;
                const fechaHasta = hastaValue ? new Date(hastaValue) : null;

                filas.forEach(fila => {
                    const dataFecha = fila.dataset.fecha;
                    if (!dataFecha) {
                        fila.style.display = "none";
                        return;
                    }

                    const fechaFila = new Date(dataFecha);
                    let mostrar = true;

                    if (fechaDesde && fechaFila < fechaDesde) mostrar = false;
                    if (fechaHasta && fechaFila > fechaHasta) mostrar = false;

                    fila.style.display = mostrar ? "" : "none";
                });

                // Actualizar fechas hidden según filas filtradas
                actualizarFechasHidden();

                formReporte.submit();
            }
        });

        formReporte.addEventListener("submit", function (e) {
            e.preventDefault();

            const ids = [];
            filas.forEach(fila => {
                if (fila.style.display !== "none") {
                    const id = fila.querySelector("td:first-child").textContent.trim();
                    ids.push(id);
                }
            });

            hiddenInputIds.value = ids.join(',');

            // Actualizar fechas hidden para asegurar estén sincronizadas
            inputHiddenDesde.value = inputDesde.value;
            inputHiddenHasta.value = inputHasta.value;

            formReporte.submit();

            console.log("ids:", hiddenInputIds.value);
            console.log("desde:", inputHiddenDesde.value);
            console.log("hasta:", inputHiddenHasta.value);
        });
    });
</script>





    
@using CemSys.Models.ViewModel
@model VM_Introduccion_Listado

<div class="main-content">

    <!-- Botón Agregar -->
    <form asp-action="Registrar" method="get" class="mb-4 text-center">
        <input class="btn-custom" type="submit" value="Agregar difunto" />
    </form>

    <!-- Contenedores de Difunto, Titular y Cuenta -->
    <div class="container-difunto-titular d-flex flex-wrap justify-content-center gap-4">
        <form asp-action="Filtrar" method="get">
            <!-- Difunto -->
            <div class="container-difunto flex-fill">
                <fieldset>
                    <legend>Difunto</legend>
                    <div>
                        <label for="dniDifunto">DNI</label>
                        <input class="form-control-sm" type="text" id="dniDifunto" name="dniDifunto" maxlength="8" minlength="8" pattern="[0-9]+" oninput="this.value = this.value.replace(/[^0-9]/g, '')"/>
                    </div>
                    <div>
                        <label for="nombreDifunto">Nombre</label>
                        <input class="form-control-sm" type="text" id="nombreDifunto" name="nombreDifunto" />
                    </div>
                    <div>
                        <label for="apellidoDifunto">Apellido</label>
                        <input class="form-control-sm" type="text" id="apellidoDifunto" name="apellidoDifunto" />
                    </div>
                </fieldset>
            </div>


            @* filtrador *@
            <div class="flex-fill">
                <fieldset>
                    <legend>Filtro</legend>
                    <div>
                        <div>
                            <label>Todos</label>
                            <input type="radio" name="tipoParcela" value="todos" checked />
                        </div>
                        <div>
                            <label>Nicho</label>
                            <input type="radio" name="tipoParcela" value="nicho" />
                        </div>
                        <div>
                            <label>Fosa</label>
                            <input type="radio" name="tipoParcela" value="fosa" />
                        </div>
                        <div>
                            <label>Panteon</label>
                            <input type="radio" name="tipoParcela" value="panteon" />
                        </div>
                    </div>
                    <div class="mb-2">
                        <label for="seccion">Sección</label>
                        <select class="form-select form-select-sm select-estandar" id="seccion" name="seccionElegida">
                            <option value="">Elija una opción</option>
                        </select>
                    </div>
                </fieldset>
            </div>

            <button type="submit" class="btn-custom">Filtrar</button>
        </form>
    </div>
        
        

<!-- Tabla de introducciones -->

@if (Model.ListaNichosDifuntos.Count == 0 && Model.ListaFosasDifuntos.Count == 0 && Model.ListaPanteonDifuntos.Count == 0)
{
}
else
{ 
        <div>
            <h4>Total de difuntos: @Model.CantidadIntroducciones</h4>
        </div>
<div>
    <div class="card shadow-sm">
        <div class="card-body p-0">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>DNI</th>
                        <th>Apellido y Nombre</th>
                        <th>Estado</th>
                        <th>Tipo</th>
                        <th>Sección</th>
                        <th>Parcela</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if(Model.ListaNichosDifuntos.Count == 0)
                    {
                    }
                    else
                    {
                        foreach(var opc in Model.ListaNichosDifuntos)
                        {
                            <tr>

                                @if (@opc.Difunto.Dni != "nn")
                                {
                                    <td>@opc.Difunto.Dni</td>
                                }
                                else
                                {
                                    <td>---</td>
                                }

                                @if (opc.Difunto.Nombre != null)
                                {
                                    <td>@opc.Difunto.Apellido.ToUpper() @opc.Difunto.Nombre.ToUpper()</td>
                                }
                                else
                                {
                                        <td>@opc.Difunto.Apellido.ToUpper() N.N</td>
                                }
                                   
                                <td>@opc.Difunto.EstadoNavigation.Estado</td>
                                <td>Nicho</td>
                                <td>@opc.Nicho.SeccionNavigation.Nombre.ToUpper()</td>
                                <td>Nicho @opc.Nicho.NroNicho fila @opc.Nicho.NroFila</td>
                                <td>
                                    <form action="Modificar" method="get">
                                        <input type="hidden" name="idDifunto" value="@opc.Difunto.IdDifunto" />
                                        <button type="submit" class="form-control">Editar</button>    
                                    </form>
                                </td>
                            </tr>
                        }
                    }

                    @if (Model.ListaFosasDifuntos.Count == 0)
                    {
                    }
                    else
                    {
                        foreach (var opc in Model.ListaFosasDifuntos)
                        {
                            <tr>

                                @if (@opc.Difunto.Dni != "nn")
                                {
                                    <td>@opc.Difunto.Dni</td>
                                }
                                else
                                {
                                    <td>---</td>
                                }

                                @if (opc.Difunto.Nombre != null)
                                {
                                    <td>@opc.Difunto.Apellido.ToUpper() @opc.Difunto.Nombre.ToUpper()</td>
                                }
                                else
                                {
                                    <td>@opc.Difunto.Apellido.ToUpper() N.N</td>
                                }

                                <td>@opc.Difunto.EstadoNavigation.Estado</td>
                                <td>Fosa</td>
                                <td>@opc.Fosa.SeccionNavigation.Nombre.ToUpper()</td>
                                <td>Fosa @opc.Fosa.NroFosa</td>
                                <td>
                                    <form action="Modificar" method="get">
                                        <input type="hidden" name="idDifunto" value="@opc.Difunto.IdDifunto" />
                                        <button type="submit" class="form-control">Editar</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    }

                    @if (Model.ListaPanteonDifuntos.Count == 0)
                    {
                    }
                    else
                    {
                        foreach (var opc in Model.ListaPanteonDifuntos)
                        {
                            <tr>

                                @if (@opc.Difunto.Dni != "nn")
                                {
                                    <td>@opc.Difunto.Dni</td>
                                }
                                else
                                {
                                    <td>---</td>
                                }

                                @if (opc.Difunto.Nombre != null)
                                {
                                    <td>@opc.Difunto.Apellido.ToUpper() @opc.Difunto.Nombre.ToUpper()</td>
                                }
                                else
                                {
                                    <td>@opc.Difunto.Apellido.ToUpper() N.N</td>
                                }

                                <td>@opc.Difunto.EstadoNavigation.Estado</td>
                                <td>Panteón</td>
                                <td>@opc.Panteon.IdSeccionPanteonNavigation.Nombre.ToUpper()</td>
                                <td>Lote @opc.Panteon.NroLote</td>
                                <td>
                                    <form action="Modificar" method="get">
                                        <input type="hidden" name="idDifunto" value="@opc.Difunto.IdDifunto" />
                                        <button type="submit" class="form-control">Editar</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    }
                        
                </tbody>
            </table>
        </div>
    </div>
    </div>
        
}

</div>

<script>

    const seccionesPorTipo = {
        nicho: @Html.Raw(Model.ListaSeccionesNichos.Any() ? Json.Serialize(Model.ListaSeccionesNichos) : "[]"),
        fosa: @Html.Raw(Model.ListaSeccionesFosas.Any() ? Json.Serialize(Model.ListaSeccionesFosas) : "[]"),
        panteon: @Html.Raw(Model.ListaSeccionesPanteones.Any() ? Json.Serialize(Model.ListaSeccionesPanteones) : "[]")
    };

    // document.addEventListener('DOMContentLoaded', () => {
    //     actualizarSecciones('nicho');
    // });


    // Función para actualizar las opciones del select
    function actualizarSecciones(tipo) {
        const select = document.getElementById('seccion');
        select.innerHTML = '<option value="">Elija la sección</option>';


        if (!seccionesPorTipo[tipo] || seccionesPorTipo[tipo].length === 0) { //si no hay datos en alguna opcion
            const option = document.createElement('option');
            option.value = '';
            option.textContent = 'No hay secciones disponibles';
            option.disabled = true;
            select.appendChild(option);
            select.disabled = true;

            return;
        }


        select.disabled = false; //si estaba desactivado lo activa

        //lógica para propiedades dinámicas
        const propiedadId = 'id';
        const propiedadNombre = 'nombre'; // Ajusta si usas diferente nombre

        seccionesPorTipo[tipo].forEach(seccion => {
            const option = document.createElement('option');
            option.value = seccion[propiedadId]; // Acceso dinámico
            option.textContent = seccion[propiedadNombre];
            select.appendChild(option);
        });

    }

    // Event listeners para los radios
    document.querySelectorAll('input[name="tipoParcela"]').forEach(radio => {
        radio.addEventListener('change', (e) => {
            actualizarSecciones(e.target.value);
        });
    });

</script>
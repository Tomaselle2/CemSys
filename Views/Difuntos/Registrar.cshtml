@using CemSys.Models.ViewModel
@model VMDifuntos
@{
    string fecha = Model.fechaActual.ToString("yyyy-MM-dd");
}

@{
    string action = (Model.ABMRepositoryVM.EsModificacion == true) ? "Modificar" : "Registrar";
}
<div class="registro-difunto-container">
    <h2>@action Difunto</h2>
    <form action="@action" method="post" id="formularioRegistrar">

        <!-- Contenedor =  Datos Personales + Acta + Descripción -->
        <div class="contenedor-principal">

            <!-- Contenedor 1: Datos Personales -->
            <div class="subcontenedor">
                @* validar si es N.N *@
                @if (action == "Registrar")
                {
                    <div>
                        <label>N.N</label>
                        <input type="checkbox" name="nn" value="nn" id="nnCheck" />
                    </div>
                }

                <div class="row">
                    <div class="col-md-4 mb-2">
                        <label for="dni">DNI<span class="obligatorio"> * </span></label>
                        <input class="form-control form-control-sm input-pequeno" type="text" name="dni" id="dni" required maxlength="8" minlength="8" pattern="[0-9]+" oninput="this.value = this.value.replace(/[^0-9]/g, '')" value="@Model.ABMRepositoryVM.Modelo?.Dni" />
                    </div>
                    <div class="col-md-4 mb-2">
                        <label for="nombreDifunto">Nombre<span class="obligatorio"> * </span></label>
                        <input class="form-control form-control-sm input-pequeno" type="text" name="nombre" id="nombreDifunto" required maxlength="60" minlength="2" value="@Model.ABMRepositoryVM.Modelo?.Nombre.ToUpper()" />
                    </div>
                    <div class="col-md-4 mb-2">
                        <label for="apellidoDifunto">Apellido<span class="obligatorio"> * </span></label>
                        <input class="form-control form-control-sm input-pequeno" type="text" name="apellido" id="apellidoDifunto" required maxlength="60" minlength="2" value="@Model.ABMRepositoryVM.Modelo?.Apellido.ToUpper()" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 mb-2">
                        <label for="fechaDefuncion">Defunción<span class="obligatorio"> * </span></label>
                        <input class="form-control form-control-sm input-pequeno" type="date" name="defuncionFecha" id="fechaDefuncion" max="@fecha" required value="@Model.ABMRepositoryVM.Modelo?.FechaDefuncion?.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-4 mb-2">
                        <label for="fechaIngreso">Ingreso<span class="obligatorio"> * </span></label>
                        <input class="form-control form-control-sm input-pequeno" type="date" name="ingresoFecha" id="fechaIngreso" max="@fecha" required value="@Model.ABMRepositoryVM.Modelo?.FechaIngreso?.ToString("yyyy-MM-dd")" />
                    </div>
                    <div class="col-md-4 mb-2">
                        <label for="fechaNacimiento">Nacimiento<span class="obligatorio"> * </span></label>
                        <input class="form-control form-control-sm input-pequeno" type="date" name="nacimientoFecha" id="fechaNacimiento" max="@fecha" required value="@Model.ABMRepositoryVM.Modelo?.FechaNacimiento?.ToString("yyyy-MM-dd")" />
                    </div>
                </div>

                <div class="mb-2">
                    <label for="estado">Estado</label>
                    <select class="form-select form-select-sm select-estado" id="estado" name="estadoId" required>
                        @if (action == "Registrar")
                        {
                            <option value="">--Elija una opción</option>
                            @foreach (var opc in Model.ListaEstadoDifunto)
                            {
                                <option value="@opc.IdEstadoDifunto">@opc.Estado</option>
                            }
                        }
                        else
                        {
                            <option value="@Model.ABMRepositoryVM.Modelo?.EstadoNavigation.IdEstadoDifunto">
                                @Model.ABMRepositoryVM.Modelo?.EstadoNavigation.Estado
                            </option>
                        }
                    </select>
                </div>

                <datosactadefuncion class="h6">Datos Acta Defunción</datosactadefuncion>



                    <div class="row">
                        <div class="col-md-2 mb-2">
                            <label for="acta">Acta</label>
                            <input type="number" class="form-control form-control-sm input-pequeno" name="acta" id="acta" min="1"
                                   value="@(Model.ABMRepositoryVM.Modelo?.ActaDefuncionNavigation?.NroActa != 0
                                                                                                                                     ? Model.ABMRepositoryVM.Modelo.ActaDefuncionNavigation.NroActa.ToString()
                                                                                                                                     : "")" />
                        </div>
                        <div class="col-md-2 mb-2">
                            <label for="tomo">Tomo</label>
                            <input type="number" class="form-control form-control-sm input-pequeno" name="tomo" id="tomo" min="1"
                                   value="@(Model.ABMRepositoryVM.Modelo?.ActaDefuncionNavigation?.Tomo != 0
                                                                                                                                     ? Model.ABMRepositoryVM.Modelo.ActaDefuncionNavigation.Tomo.ToString()
                                                                                                                                     : "")" />
                        </div>
                        <div class="col-md-2 mb-2">
                            <label for="folio">Folio</label>
                            <input type="number" class="form-control form-control-sm input-pequeno" name="folio" id="folio" min="1"
                                   value="@(Model.ABMRepositoryVM.Modelo?.ActaDefuncionNavigation?.Folio != 0
                                                                                                                                     ? Model.ABMRepositoryVM.Modelo.ActaDefuncionNavigation.Folio.ToString()
                                                                                                                                     : "")" />
                        </div>
                        <div class="col-md-2 mb-2">
                            <label for="serie">Serie</label>
                            <input type="text" class="form-control form-control-sm input-pequeno" name="serie" id="serie" maxlength="4"
                                   value="@(Model.ABMRepositoryVM.Modelo?.ActaDefuncionNavigation?.Serie != null
                                                                                                                                     ? Model.ABMRepositoryVM.Modelo.ActaDefuncionNavigation.Serie.ToString().ToUpper()
                                                                                                                                     : "")" />
                        </div>
                        <div class="col-md-2 mb-2">
                            <label for="age">Año</label>
                            <input type="number" class="form-control form-control-sm input-pequeno" name="age" id="age" min="1927" max="@Model.fechaActual.Year"
                                   value="@(Model.ABMRepositoryVM.Modelo?.ActaDefuncionNavigation?.Age != 0
                                                                                                                                     ? Model.ABMRepositoryVM.Modelo.ActaDefuncionNavigation.Age.ToString()
                                                                                                                                     : "")" />
                        </div>
                    </div>

                <!-- Datos adicionales -->
                <div class="mb-2">
                    <label for="datosAdicionales">Datos adicionales</label>
                    <textarea class="form-control form-control-sm" id="datosAdicionales" name="datosAdicionales">@Model.ABMRepositoryVM.Modelo?.Descripcion</textarea>
                </div>
            </div>
        </div>
     

        <!-- Contenedor 2: Parcela -->
        @if(action == "Registrar"){
            <div class="subcontenedor">
                <fieldset>
                    <legend class="h6">Tipo de Parcela </legend>
                    <div class="form-check form-check-inline">
                        <input type="radio" class="form-check-input" name="tipoParcela" value="nicho" id="nicho" checked>
                        <label class="form-check-label" for="nicho">Nicho</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input type="radio" class="form-check-input" name="tipoParcela" value="fosa" id="fosa">
                        <label class="form-check-label" for="fosa">Fosa</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input type="radio" class="form-check-input" name="tipoParcela" value="panteon" id="panteon">
                        <label class="form-check-label" for="panteon">Panteón</label>
                    </div>
                </fieldset>

                <fieldset class="mt-3">
                    <legend class="h6">Ubicación</legend>
                    <div class="mb-2">
                        <label for="seccion">Sección<span class="obligatorio"> * </span></label>
                        <select class="form-select form-select-sm select-estandar" required id="seccion" name="seccionElegida">
                            <option value="">Elija una opción</option>
                        </select>
                    </div>
                    <div class="mb-2">
                        <label for="parcelaElegida">Parcela<span class="obligatorio"> * </span></label>
                        <select class="form-select form-select-sm select-estandar" id="parcelaElegida" name="parcelaElegida" required>
                            <option value="">Elija la parcela</option>
                        </select>
                    </div>
                </fieldset>
            </div>
        }
       
        

        <!-- Botón al final del contenedor principal -->
        <div class="text-center mt-3">
            @if(action == "Registrar")
            {
                <input type="button" value="@action" onclick="confirmarEnvio()" class="btn-custom" />
            }
            else
            {
                <input type="hidden" value="@Model.ABMRepositoryVM.Modelo.IdDifunto" name="idDifunto"/>
                <input type="submit" value="@action" class="btn btn-custom" />
            }
        </div>
    </form>
</div>



@* Modal de confirmación *@
<div class="modal" tabindex="-1" id="modalConfirmacion">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Registrar difunto</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Desea registrar el difunto <strong id="apellidoModal"></strong> <strong id="nombreModal"></strong> ?</p>
                <p>En la ubicación <strong>"sección </strong><strong id="seccionElegidaModal"></strong> <strong id="parcelaElegidaModal"></strong><strong>"</strong></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" onclick="cerrarModal()">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="enviarFormulario()">Registrar</button>
            </div>
        </div>
    </div>
</div>

@* Notificaciones de registrar *@
@if (!string.IsNullOrEmpty(TempData["RegistrarMensaje"] as string))
{
    <div class="toast-container position-fixed bottom-0 start-50 translate-middle-x p-3" style="z-index: 1055;">
        <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" id="notificacion">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["RegistrarMensaje"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

}

@* Notificaciones de modificar *@
@if (!string.IsNullOrEmpty(TempData["ModificarMensaje"] as string))
{
    <div class="toast-container position-fixed bottom-0 start-50 translate-middle-x p-3" style="z-index: 1055;">
        <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true" id="notificacion">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["ModificarMensaje"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

}

@* logica con js*@

<script>
    const action = "@action";

    //logica de N.N
    const checkNN = document.getElementById('nnCheck');
    const dniText = document.getElementById('dni');
    const nombreDifunto = document.getElementById('nombreDifunto');

    // Cargar opciones iniciales (nicho por defecto)
      document.addEventListener('DOMContentLoaded', () => {
        var toastEl = document.getElementById('notificacion');
        if (toastEl) {
            var toast = new bootstrap.Toast(toastEl);
            toast.show();
        }

        if (action === "Modificar") {
            if (dniText.value === "nn") {
                console.log("hay un nn");
                dniText.value = "";
                nombreDifunto.value = "";
                dniText.disabled = true;
                nombreDifunto.disabled = true;
            }

            // En "Modificar", NO se ejecuta actualizarSecciones ni se añaden listeners
            return;
        }

        // Si es "Registrar"
        // Cargar por defecto nicho
        actualizarSecciones('nicho');

        // Agregar listeners para tipo de parcela
        document.querySelectorAll('input[name="tipoParcela"]').forEach(radio => {
            radio.addEventListener('change', (e) => {
                actualizarSecciones(e.target.value);
            });
        });

        // Listener para el estado
        estadoSelect.addEventListener('change', () => {
            document.querySelectorAll('input[name="tipoParcela"]').forEach(radio => {
                if (radio.checked) {
                    actualizarSecciones(radio.value);
                }
            });
        });
    });


    if(action === "Registrar") {
        checkNN.addEventListener("change", (e) => {
            console.log("presiona el check");
            const isChecked = e.target.checked;
            dniText.disabled = isChecked;
            nombreDifunto.disabled = isChecked;

            if (isChecked) {
                dniText.value = "";
                nombreDifunto.value = "";
            }
        });
    }
    // Datos iniciales
    const estadoSelect = document.getElementById('estado');

    const seccionesPorTipo = {
        nicho: @Html.Raw(Model.ListaSeccionesNicho.Any() ? Json.Serialize(Model.ListaSeccionesNicho) : "[]"),
        fosa: @Html.Raw(Model.ListaSeccionesFosa.Any() ? Json.Serialize(Model.ListaSeccionesFosa) : "[]"),
        panteon: @Html.Raw(Model.ListaSeccionesPanteon.Any() ? Json.Serialize(Model.ListaSeccionesPanteon) : "[]")
    };

    const parcelasPorSeccion = {
        nicho: @Html.Raw(Model.ListaNichos.Any() ? Json.Serialize(Model.ListaNichos) : "[]"),
        fosa: @Html.Raw(Model.ListaFosas.Any() ? Json.Serialize(Model.ListaFosas) : "[]"),
        panteon: @Html.Raw(Model.ListaPanteones.Any() ? Json.Serialize(Model.ListaPanteones) : "[]")
    };

    //logica para saber si el DNI ingresado existe en la base de datos
    const listaDNIdifuntos = @Html.Raw(Model.ListaDifuntos.Any() ? Json.Serialize(Model.ListaDifuntos) : "[]");



    dniText.addEventListener("blur", (e) => {
        let dniIngresado = e.target.value.trim();
        const existeDNI = listaDNIdifuntos.some(difunto => difunto.dni === dniIngresado);

        if (dniIngresado.length <= 7) {
            alert("El formato del DNI es incorrecto");
            e.target.value = "";
        }


        if (existeDNI) {
            alert("El DNI ya se encuentra registrado");
            console.log("DNI duplicado:", dniIngresado);
            e.target.value = "";
        }
    });



    // Función para actualizar las opciones del select
        function actualizarSecciones(tipo) {
        const select = document.getElementById('seccion');
        const parcelaElegida = document.getElementById('parcelaElegida');

        // Limpiar opciones anteriores
        select.innerHTML = '<option value="">Elija la sección</option>';
        parcelaElegida.innerHTML = '<option value="">Elija la parcela</option>';

        if (!seccionesPorTipo[tipo] || seccionesPorTipo[tipo].length === 0) {
            const option = document.createElement('option');
            option.value = '';
            option.textContent = 'No hay secciones disponibles';
            option.disabled = true;
            select.appendChild(option);
            select.disabled = true;

            const optionParcela = document.createElement('option');
            optionParcela.value = '';
            optionParcela.textContent = 'No hay parcelas disponibles';
            optionParcela.disabled = true;
            parcelaElegida.appendChild(optionParcela);
            parcelaElegida.disabled = true;
            return;
        }

        select.disabled = false;
        parcelaElegida.disabled = false;

        const propiedadId = 'id';
        const propiedadNombre = 'nombre';

        seccionesPorTipo[tipo].forEach(seccion => {
            const option = document.createElement('option');
            option.value = seccion[propiedadId];
            option.textContent = seccion[propiedadNombre];
            select.appendChild(option);
        });

        // Lógica del cambio de seccion
        select.addEventListener('change', function () {
            const seccionId = parseInt(this.value);
            parcelaElegida.innerHTML = '<option value="">Elija la parcela</option>';

            let parcelasFiltradas = parcelasPorSeccion[tipo].filter(p => p.seccion === seccionId);

            const estadoSeleccionado = estadoSelect.value;

            if (estadoSeleccionado == "1" && tipo == "nicho") {
                parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos === 0);
            } else if (tipo == "nicho") {
                parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos <= 5);
            }

            if (estadoSeleccionado == "1" && tipo == "fosa") {
                parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos <= 3);
            } else if (tipo == "fosa") {
                parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos <= 5);
            }

            if (estadoSeleccionado == "1" && tipo == "panteon") {
                parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos <= 12);
            } else if (tipo == "panteon") {
                parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos <= 60);
            }

            parcelasFiltradas.forEach(parcela => {
                const option = document.createElement('option');
                option.value = parcela.id;
                option.textContent = parcela.ubicacion;
                parcelaElegida.appendChild(option);
            });
        });
    }


    // Event listeners para los radios
    document.querySelectorAll('input[name="tipoParcela"]').forEach(radio => {
        radio.addEventListener('change', (e) => {
            actualizarSecciones(e.target.value);
        });
    });

    estadoSelect.addEventListener('change', (est) => {
        document.querySelectorAll('input[name="tipoParcela"]').forEach(radio => {
            if (radio.checked) {
                actualizarSecciones(radio.value);
                console.log("Cambio de select estado" + radio.value);
            }

        });

    });



    //logica de modal
    function confirmarEnvio() {
        const form = document.getElementById("formularioRegistrar");

        if (form.checkValidity()) {
            const modal = new bootstrap.Modal(document.getElementById("modalConfirmacion"));

            const nombre = document.getElementById("nombreDifunto").value;
            const apellido = document.getElementById("apellidoDifunto").value;

            const selectSeccion = document.getElementById("seccion");
            const textoSeccion = selectSeccion.options[selectSeccion.selectedIndex].text;

            const selectParcela = document.getElementById("parcelaElegida");
            const textoParcela = selectParcela.options[selectParcela.selectedIndex].text;

            //se inserta en el modal
            document.getElementById("nombreModal").textContent = nombre;
            document.getElementById("apellidoModal").textContent = apellido;
            document.getElementById("seccionElegidaModal").textContent = textoSeccion;
            document.getElementById("parcelaElegidaModal").textContent = textoParcela;
            modal.show();
        } else {
            form.reportValidity();
        }
    }

    function cerrarModal() {
        document.getElementById("modalConfirmacion").style.display = "none";
    }

    function enviarFormulario() {
        const form = document.getElementById("formularioRegistrar");

        if (form.checkValidity()) {
            form.submit(); // Sólo se envía si el formulario es válido
        } else {
            form.reportValidity(); // Muestra los mensajes de error del navegador
            cerrarModal(); // Opcional: cerrá el modal si querés forzar al usuario a revisar
        }
    }


    //fin logica modal

</script>
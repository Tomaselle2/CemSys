@using CemSys.Models.ViewModel
@model VMDifuntos
@{
    string fecha = Model.fechaActual.ToString("yyyy-MM-dd");
}
<div class="main-content">
    <h1>Registrar difunto</h1>
    <form action="Registrar" method="post">
        
        <div>
            <label for="dni">DNI</label>
            <input class="form-control-sm" type="text" name="dni" id="dni" value="" required maxlength="8" min="7" pattern="[0-9]+" />
        </div>
        <div>
            <label for="nombreDifunto">Nombre</label>
            <input class="form-control-sm" type="text" name="nombre" id="nombreDifunto" value="" required maxlength="60" minlength="2" />
        </div>
        <div>
            <label for="apellidoDifunto">Apellido</label>
            <input class="form-control-sm" type="text" name="apellido" id="apellidoDifunto" value="" required maxlength="60" minlength="2" />
        </div>
        <div>
            <label for="fechaDefuncion">Defuncion</label>
            <input class="form-control-sm" type="date" name="defuncionFecha" id="fechaDefuncion" value="" max="@fecha" required/>
        </div>
        <div>
            <label for="fechaIngreso">Ingreso</label>
            <input class="form-control-sm" type="date" name="ingresoFecha" id="fechaIngreso" value="" max="@fecha" required />
        </div>
        <div>
            <label for="fechaNacimiento">Nacimiento</label>
            <input class="form-control-sm" type="date" name="nacimientoFecha" id="fechaNacimiento" value="" max="@fecha" required />
        </div>
        <div>
            <label for="estado">Estado</label>
            <select class="form-select-sm" id="estado" name="estadoId">
                 <option value="">--Elija una opción</option>
                @if (Model.ListaEstadoDifunto.Count == 0)
                {
                    <option value="">No hay valores</option>
                }
                else
                {
                    @foreach (var opc in Model.ListaEstadoDifunto)
                    {
                        <option value="@opc.IdEstadoDifunto">@opc.Estado</option>
                    }
                }
            </select>
        </div>
        @*acta defuncion*@
        <fieldset>
            <legend>Datos acta defunción</legend>
            <div>
                <label for="acta">Acta</label>
                <input type="number" name="acta" value="" id="acta" min="1"/>
            </div>
            <div>
                <label for="tomo">Tomo</label>
                <input type="number" name="tomo" value="" id="tomo" min="1" />
            </div>
            <div>
                <label for="folio">Folio</label>
                <input type="number" name="folio" value="" id="folio" min="1" />
            </div>
            <div>
                <label for="serie">Serie</label>
                <input type="text" name="serie" value="" id="serie" maxlength="4" />
            </div>
            <div>
                <label for="age">Año</label>
                <input type="number" name="age" value="" id="age" min="1927" max="@Model.fechaActual.Year"/>
            </div>
        </fieldset>
        <div>
            @*Radios buton*@
            <fieldset>
                <legend>Tipo de parcela</legend>

                <label for="nicho">Nicho</label>
                <input type="radio" name="tipoParcela" value="nicho" id="nicho" checked/>

                <label for="fosa">Fosa</label>
                <input type="radio" name="tipoParcela" value="fosa" id="fosa"/>

                <label for="panteon">Panteon</label>
                <input type="radio" name="tipoParcela" value="panteon" id="panteon" />
            </fieldset>

            @*Desplegables*@
            <fieldset>
                <legend>Ubicación</legend>
                <div>
                    <label for="seccion">Sección</label>
                    <select required id="seccion" name="seccionElegida">
                      <option value="">Elija una opción</option>
                    </select>
                </div>
                <div>
                    <label for="parcelaElegida">Parcela</label>
                    <select id="parcelaElegida" name="parcelaElegida" required>
                        <option value="">Elija la parcela</option>
                    </select>
                </div>
            </fieldset>
        </div>
        <input type="submit" name="name" value="Registrar" />
    </form>
</div>

<script>
    // Datos iniciales (debes poblarlos desde tu modelo)
    const seccionesPorTipo = {
    nicho: @Html.Raw(Model.ListaSeccionesNicho.Any() ? Json.Serialize(Model.ListaSeccionesNicho) : "[]"),
    fosa: @Html.Raw(Model.ListaSeccionesFosa.Any() ? Json.Serialize(Model.ListaSeccionesFosa) : "[]")
    };

    const parcelasPorSeccion = {
        nicho: @Html.Raw(Model.ListaNichos.Any() ? Json.Serialize(Model.ListaNichos) : "[]"),
        fosa: @Html.Raw(Model.ListaFosas.Any() ? Json.Serialize(Model.ListaFosas) : "[]")
    };

    

    // Función para actualizar las opciones del select
    function actualizarSecciones(tipo) 
    {
        const select = document.getElementById('seccion');
        select.innerHTML = '<option value="">Elija la sección</option>';

        const selecParcelaElegida = document.getElementById('parcelaElegida');
        parcelaElegida.innerHTML = '<option value="">Elija la parcela</option>';

        //logica para saber si el DNI ingresado existe en la base de datos
        const listaDNIdifuntos = @Html.Raw(Model.ListaDifuntos.Any() ? Json.Serialize(Model.ListaDifuntos) : "[]");
        
        const dniText = document.getElementById('dni');

        dniText.addEventListener("blur", (e) => {
            let dniIngresado = e.target.value.trim();

            const existeDNI = listaDNIdifuntos.some(difunto => difunto.dni === dniIngresado);

            if (existeDNI) {
                alert("El DNI ya se encuentra registrado");
                console.log("DNI duplicado:", dniIngresado);
                e.target.value = "";
            }
        });


        if (!seccionesPorTipo[tipo] || seccionesPorTipo[tipo].length === 0) { //si no hay datos en alguna opcion
                const option = document.createElement('option');
                option.value = '';
                option.textContent = 'No hay secciones disponibles';
                option.disabled = true;
                select.appendChild(option);
                select.disabled = true;     
                
                const optionParcela = document.createElement('option');
                optionParcela.value = '';
                optionParcela.textContent = 'No hay parcelas disponibles';
                optionParcela.disabled = true;
                parcelaElegida.appendChild(optionParcela);
                parcelaElegida.disabled = true
                return;
        }


        select.disabled = false; //si estaba desactivado lo activa
        parcelaElegida.disabled = false;

        //lógica para propiedades dinámicas
        const propiedadId = 'id';
        const propiedadNombre = 'nombre'; // Ajusta si usas diferente nombre

        seccionesPorTipo[tipo].forEach(seccion => {
            const option = document.createElement('option');
            option.value = seccion[propiedadId]; // Acceso dinámico
            option.textContent = seccion[propiedadNombre];
            select.appendChild(option);
        });

        //logica para cambiar el select de parcela
        document.getElementById('seccion').addEventListener('change', function () {
             //console.log("Esta cambiando de seccion");
             const seccionId = parseInt(this.value); // el valor del select seccion, convertido a entero
             selecParcelaElegida.innerHTML = '<option value="">Elija la parcela</option>'; // limpiar

             let parcelasFiltradas = parcelasPorSeccion[tipo].filter(p => p.seccion === seccionId); //filtra por la seccion seleccionada

             const tipoEstado = document.getElementById("estado");
             let estadoSeleccionado = tipoEstado.value;
             if(estadoSeleccionado == "1"){
                 console.log('cuerpo completo')
                 parcelasFiltradas = parcelasFiltradas.filter(m => m.difuntos === 0);
             }
             //console.log("estado: " + estadoSeleccionado);

             //console.log(this.value);

            parcelasFiltradas.forEach(parcela => { //recorre todos las parcelas
                const option = document.createElement('option');
                option.value = parcela.id;
                option.textContent = parcela.ubicacion;
                selecParcelaElegida.appendChild(option);
            });

        });
    }

    // Event listeners para los radios
    document.querySelectorAll('input[name="tipoParcela"]').forEach(radio => {
        radio.addEventListener('change', (e) => {
            actualizarSecciones(e.target.value);
        });
    });

    // Cargar opciones iniciales (nicho por defecto)
    document.addEventListener('DOMContentLoaded', () => {
        actualizarSecciones('nicho');
    });
</script>